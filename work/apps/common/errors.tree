
// states

states
	[def]
	[def_no1]
	[def_no1_no2]
	[def_no1_no2_nm1]
	[def_no1_no2_bm1]
	[def_no1_no2_om1]
	[def_no1_no2_gm1]
	[def_no1_nm1]
	[def_no1_nm1_no2]
	[def_no1_nm1_nm2]
	[def_no1_nm1_bm1]
	[def_no1_nm1_om1]
	[def_no1_nm1_gm1]
	[def_no1_bm1]
	[def_no1_bm1_no2]
	[def_no1_bm1_nm1]
	[def_no1_bm1_bm2]
	[def_no1_bm1_om1]
	[def_no1_bm1_gm1]
	[def_no1_om1]
	[def_no1_gm1]
	[def_nm1]
	[def_nm1_no1]
	[def_nm1_no1_no2]
	[def_nm1_no1_nm2]
	[def_nm1_no1_bm1]
	[def_nm1_no1_om1]
	[def_nm1_no1_gm1]
	[def_nm1_nm2]
	[def_nm1_nm2_no1]
	[def_nm1_nm2_bm1]
	[def_nm1_nm2_om1]
	[def_nm1_nm2_gm1]
	[def_nm1_bm1]
	[def_nm1_bm1_no1]
	[def_nm1_bm1_nm2]
	[def_nm1_bm1_bm2]
	[def_nm1_bm1_om1]
	[def_nm1_bm1_gm1]
	[def_nm1_om1]
	[def_nm1_gm1]
	[def_bm1]
	[def_bm1_no1]
	[def_bm1_no1_no2]
	[def_bm1_no1_nm1]
	[def_bm1_no1_bm2]
	[def_bm1_no1_om1]
	[def_bm1_no1_gm1]
	[def_bm1_nm1]
	[def_bm1_nm1_no1]
	[def_bm1_nm1_nm2]
	[def_bm1_nm1_bm2]
	[def_bm1_nm1_om1]
	[def_bm1_nm1_gm1]
	[def_bm1_bm2]
	[def_bm1_bm2_no1]
	[def_bm1_bm2_nm1]
	[def_bm1_bm2_om1]
	[def_bm1_bm2_gm1]
	[def_bm1_om1]
	[def_bm1_gm1]
	[def_om1]
	[def_gm1]
	[om1_nok1]
	[om1_nok1_nok2]
	[om1_nok1_nok2_q]
	[om1_om2]
	[om1_gm1]
	[om1_y]
	[om1_n]
	[om1_om2_y]
	[om1_om2_n]
	[are_nn_jj]
	[which_nn_jj]
	[what_else]

// generated

[def_no1]
	def
	noinput
	apology1 & promptno1
	no1

[def_no1_no2]
	def no1
	noinput
	apology1 & promptno2
	no2

[def_no1_no2_nm1]
	def no1 no2
	nomatch
	apology2 & nonmquit
	def

[def_no1_no2_bm1]
	def no1 no2
	badmatch
	apology2 & nobmquit
	def

[def_no1_no2_om1]
	def no1 no2
	okmatch
	apology2 & promptom1
	om1

[def_no1_no2_gm1]
	def no1 no2
	goodmatch
	(exec def last)
	def

[def_no1_nm1]
	def no1
	nomatch
	apology1 & promptnm1
	nm1

[def_no1_nm1_no2]
	def no1 nm1
	noinput
	apology2 & nonoquit
	def

[def_no1_nm1_nm2]
	def no1 nm1
	nomatch
	apology2 & nonmquit
	def

[def_no1_nm1_bm1]
	def no1 nm1
	badmatch
	apology2 & nobmquit
	def

[def_no1_nm1_om1]
	def no1 nm1
	okmatch
	apology2 & promptom1
	om1

[def_no1_nm1_gm1]
	def no1 nm1
	goodmatch
	(exec def last)
	def

[def_no1_bm1]
	def no1
	badmatch
	apology1 & promptbm1
	bm1

[def_no1_bm1_no2]
	def no1 bm1
	noinput
	apology2 & nonoquit
	def

[def_no1_bm1_nm1]
	def no1 bm1
	nomatch
	apology2 & nonmquit
	def

[def_no1_bm1_bm2]
	def no1 bm1
	badmatch
	apology2 & nobmquit
	def

[def_no1_bm1_om1]
	def no1 bm1
	okmatch
	apology2 & promptom1
	om1

[def_no1_bm1_gm1]
	def no1 bm1
	goodmatch
	(exec def last)
	def

[def_no1_om1]
	def no1
	okmatch
	apology1 & promptom1
	om1

[def_no1_gm1]
	def no1
	goodmatch
	(exec def last)
	def

[def_nm1]
	def
	nomatch
	apology1 & promptnm1
	nm1

[def_nm1_no1]
	def nm1
	noinput
	apology1 & promptno1
	no1

[def_nm1_no1_no2]
	def nm1 no1
	noinput
	apology2 & nonoquit
	def

[def_nm1_no1_nm2]
	def nm1 no1
	nomatch
	apology2 & nonmquit
	def

[def_nm1_no1_bm1]
	def nm1 no1
	badmatch
	apology2 & nobmquit
	def

[def_nm1_no1_om1]
	def nm1 no1
	okmatch
	apology2 & promptom1
	om1

[def_nm1_no1_gm1]
	def nm1 no1
	goodmatch
	(exec def last)
	def

[def_nm1_nm2]
	def nm1
	nomatch
	apology1 & promptnm2
	nm2

[def_nm1_nm2_no1]
	def nm1 nm2
	noinput
	apology2 & nonoquit
	def

[def_nm1_nm2_bm1]
	def nm1 nm2
	badmatch
	apology2 & nobmquit
	def

[def_nm1_nm2_om1]
	def nm1 nm2
	okmatch
	apology2 & promptom1
	om1

[def_nm1_nm2_gm1]
	def nm1 nm2
	goodmatch
	(exec def last)
	def

[def_nm1_bm1]
	def nm1
	badmatch
	apology1 & promptbm1
	bm1

[def_nm1_bm1_no1]
	def nm1 bm1
	noinput
	apology2 & nonoquit
	def

[def_nm1_bm1_nm2]
	def nm1 bm1
	nomatch
	apology2 & nonmquit
	def

[def_nm1_bm1_bm2]
	def nm1 bm1
	badmatch
	apology2 & nobmquit
	def

[def_nm1_bm1_om1]
	def nm1 bm1
	okmatch
	apology2 & promptom1
	om1

[def_nm1_bm1_gm1]
	def nm1 bm1
	goodmatch
	(exec def last)
	def

[def_nm1_om1]
	def nm1
	okmatch
	apology1 & promptom1
	om1

[def_nm1_gm1]
	def nm1
	goodmatch
	(exec def last)
	def

[def_bm1]
	def
	badmatch
	apology1 & promptbm1
	bm1

[def_bm1_no1]
	def bm1
	noinput
	apology1 & promptno1
	no1

[def_bm1_no1_no2]
	def bm1 no1
	noinput
	apology2 & nonoquit
	def

[def_bm1_no1_nm1]
	def bm1 no1
	nomatch
	apology2 & nonmquit
	def

[def_bm1_no1_bm2]
	def bm1 no1
	badmatch
	apology2 & nobmquit
	def

[def_bm1_no1_om1]
	def bm1 no1
	okmatch
	apology2 & promptom1
	om1

[def_bm1_no1_gm1]
	def bm1 no1
	goodmatch
	(exec def last)
	def

[def_bm1_nm1]
	def bm1
	nomatch
	apology1 & promptnm1
	nm1

[def_bm1_nm1_no1]
	def bm1 nm1
	noinput
	apology2 & nonoquit
	def

[def_bm1_nm1_nm2]
	def bm1 nm1
	nomatch
	apology2 & nonmquit
	def

[def_bm1_nm1_bm2]
	def bm1 nm1
	badmatch
	apology2 & nobmquit
	def

[def_bm1_nm1_om1]
	def bm1 nm1
	okmatch
	apology2 & promptom1
	om1

[def_bm1_nm1_gm1]
	def bm1 nm1
	goodmatch
	(exec def last)
	def

[def_bm1_bm2]
	def bm1
	badmatch
	apology1 & promptbm2
	bm2

[def_bm1_bm2_no1]
	def bm1 bm2
	noinput
	apology2 & nonoquit
	def

[def_bm1_bm2_nm1]
	def bm1 bm2
	nomatch
	apology2 & nonmquit
	def

[def_bm1_bm2_om1]
	def bm1 bm2
	okmatch
	apology2 & promptom1
	om1

[def_bm1_bm2_gm1]
	def bm1 bm2
	goodmatch
	(exec def last)
	def

[def_bm1_om1]
	def bm1
	okmatch
	apology1 & promptom1
	om1

[def_bm1_gm1]
	def bm1
	goodmatch
	(exec def last)
	def

[def_gm1]
	def
	goodmatch
	(exec def this)
	def

// confirmation sequences

[def_om1]
	def
	okmatch
	prompt & (quote last)
	om1

[om1_nok1]
	om1
	notokmatch
	apology1 & repeatyn
	nok1

[om1_nok1_nok2]
	om1 nok1
	notokmatch
	apology2 & repeatyn
	nok2

[om1_nok1_nok2_q]
	om1 nok1 nok2
	notokmatch
	aplogy2 & nomatchquit
	def

[om1_om2]
	om1
	okmatch
	(exec def this)
	om1

[om1_gm1]
	om1
	goodmatch
	(exec om1 this)
	om1

[om1_y]
	om1
	yes continue
	(exec def last)
	def

[om1_n]
	om1
	no continue
	prompt & (quote next)
	om2

[om1_om2_y]
	om1 om2
	yes continue
	(exec def last)
	def

[om1_om2_n]
	om1 om2
	no continue
	apology2 & nomatchquit
	def

// old stuff

[are_nn_jj]
	def
	are NN JJ
	(ask)
	def

[which_nn_jj]
	def
	which NN JJ
	(find)
	found

[what_else]
	found
	WP ELS
	(find ELS)
	else

noinput
	(match<10)

nomatch
	(match<30)

badmatch
	(match>29) & (match<60)

okmatch
	(match>59) & (match<80)

goodmatch
	(match>79)

notokmatch
	(match<50)

promptno1
	i cannot hear you
	apology1 & i cannot hear your question
	apology1 & i could not hear you, can you ask again

promptno2
	apology2 & i still cannot hear you
	apology2 & there may be a problem, i cannot hear you at all
	apology2 & please ask again

noinputquit
	apology1 & i cannot hear you, please try later
	apology2 & i still cannot hear you, perhaps you can try later
	apology2 & i guess the system has some problems, please contact the admin

proptnm1
	apology1 & i cannot make out your question, please ask again
	apology1 & i could not figure out your question, can you ask again

promptnm2
	apology2 & now I cannot hear you, please ask again
	apology2 & but I cannot hear you
	apology1 & i guess now we have an audio problem, please try again

nmquit
	apology2 & i guess i could not figure out your question, please try later
	aplogymore & i think this will not work, please contact the admin

proptbm1
	apology1 & i cannot make out your question, please ask again
	apology1 & i could not figure out your question, can you ask again

promptbm2
	apology2 & now I cannot hear you, please ask again
	apology2 & but I cannot hear you
	apology1 & i guess now we have an audio problem, please try again

bmquit
	apology2 & i guess i could not figure out your question, please try later
	aplogymore & i think this will not work, please contact the admin

prompt
	is your query
	are you asking

repeatyn
	again, are you asking
	once more, is your question

yes more
	yes there are more
	yes there is more

no more
	no there are no more
	no more solutions

// included for testing matchNode
confirmation
	yes continue & pull stack
	no continue & ask another

yes continue
	yes
	yeah
	yup
	okay
	i guess
	go on
	i think so

no continue
	nope
	nah
	i dont think so
	i guess not
	that is not correct
	not

pull stack
	the question is what i asked
	returning to recognized question

ask another
	apology1 & Can you ask another question
	apology1 & Perhaps i can try another question

apology1
	i am sorry
	i am really sorry
	i apologize
	sorry about this

apology2
	i am so sorry
	sorry to ask again
	i must apologize
	my apologies,

start
	fully specified question
	not fully specified question
	confirmation
	command & system

not fully specified question
	any ELS & ask ELS
	WP ELS & find ELS
	yes continue & yes more
	no continue & no more



fully specified question
	are NN JJ
	which NN JJ

are NN JJ
	are NNS JJ-N
	are NNS JJ-N at this time
	are the NNS JJ-N
	are the NNS JJ-N
	are there any JJ-P NNS
	do the NNS get JJ-N at this time
	do you think the NNS are JJ-N
	do you think NNP is JJ-N
	do you think NNP is JJ-P
	is NNP a JJ-P NN
	is NNP a JJS-P NN
	is NNP DT NN
	is NNP JJR-P
	is NNP JJR-N

which NN JJ
	which NN is JJ-P
	which NN is JJ-N
	which NN is JJR-N than NNP
	which NN is JJR-P than NNP
	which NNS are JJ-P
	WP NN JJ-P
	WP NNS JJ-P
	WP is a JJ-P NN
	WP are the JJ-P NNS

WP ELS
	what other NN is JJ-P
	what other NN is JJ-N
	what NN is JJR-P
	what NN is JJR-N

ask ELS
	(ask ELS)

find ELS
	(find ELS)

(ask)
	(V0=0) & intro noanswers
	(V0>0) & intro yesanswers

(find)
	(V0=0) & cantfind
	(V0=1) & oneitem V1
	(V0=2) & twoitems V1 and V2
	(V0>2) & manyitems forinstance V1

(ask ELS)
	(V0=0) & intro noanswers
	(V0>0) & intro yesanswers

(find ELS)
	(V0=0) & cantfind
	(V0=1) & oneitem V1
	(V0=2) & twoitems V1 and V2
	(V0>2) & manyitems forinstance V1

intro
	i guess
	It looks like
	It seems like
	Apparently

yesanswers
	that is the case
	the answer is yes
	that is true

noanswers
	that is not the case
	the answer is no
	that is false

cantfind
	i cannot find an answer
	Seems that i could not find any
	Well it looks like nothing matched

oneitem
	that could be
	that one is,

twoitems
	there are two such,
	there are exactly two answers,
	two answers may fit,
	two solutions,
	there are two matches,

manyitems
	there are several solutions,
	there are many answers,
	many ways to answer this,
	there are quite a few solutions,
	there are several matches,

forinstance
	for example
	for instance
	such as
	as an example
	one of them is
	one such is
	one such example is

command
	list
	cat

system
	pc
	linux
